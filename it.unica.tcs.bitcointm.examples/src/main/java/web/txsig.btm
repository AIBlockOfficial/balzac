// Alice's private key
const kA = key:cUSH4x3Uq9uMgeZGdpTFvr5gVGYcAg4vrTNe9QvWsU8Dq3deym6Z
// Alice's public key
const kApub = pubkey:033806fe039c8d149c8e68f4665b4a479acab773b20bddf7df0df59ba4f0567341
// Alice's address
const addrA = address:my6NmTELHBMVUsAWb34iRoGYDQpcYJvVZV

// Bob's private key
const kB = key:cUwtWVskxp5T31DxrQukxSxQ1Hj7VB53FrE52THe32bF4GN5QvtL
// Bob's public key
const kBpub = kB.toPubkey

// Carl's private key
const kC = key:cVhDA3Yxkeacnci8WUokAfQT6Nv4tGpmy1GzSYtJdYqDDwZipPPB
// Carl's public key
const kCpub = kB.toPubkey

// tx redeemable with Alice's private key
transaction A_funds {
    input = _
    output = 1 BTC: fun(x). versig(kApub; x)
}

//needs three signatures to redeem  1 bitcoin
transaction T_ABC{
    input = _
    output = 1 BTC: fun(x, y, z). versig(kApub, kBpub, kCpub; x, y, z)
}

transaction T_template (sA:signature, sB:signature, sC:signature){
    input = T_ABC: sA sB sC
    output = 1 BTC: fun(x). versig(kApub; x)
}

const sigA = sig(kA) of T_template(_,_,_)