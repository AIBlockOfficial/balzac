package it.unica.btm.test_tx_params

transaction T {
	input = _   
	output = 2 BTC : fun(a:int) . a==5 
}

transaction T1(x:hash160) {
	input = T: 5
	output = 1 BTC : fun(a:string) . hash160(a)==x  
}

transaction T2 { 
	input = T1(hash160:47095f5dc6fdd1bfb416cc0f301cf7c1de5a8547): "5"
	output = 0: ""
}

const var_T1:transaction = T1(hash160:47095f5dc6fdd1bfb416cc0f301cf7c1de5a8547)

transaction T3 {
	input = T1(hash160("5")): "5"  
	output = 0.5 BTC : fun(a) . a==42
}
 
transaction T4(n:string) {
	input = T1(hash160(n)): n  
	output = 0.5 BTC : fun(a:int) . a==42 
}

transaction T5 {      
	input = [ 
		T3: 42;
		T4("6"): 42
	] 
	output = 0: ""   
}

/*
 * transaction as parameter
 */
transaction inTx { 
	input = _ 
	output = 0.5 BTC : fun(a:int) . a==44
}

transaction A {
	input = inTx: 44 
	output = 0.5 BTC : fun(a:int) . a==42
}

transaction A_bis(inTx:transaction) {
	input = inTx: 44 
	output = 0.5 BTC : fun(a:int) . a==42
}


compile
	T
	
	T1(hash160:47095f5dc6fdd1bfb416cc0f301cf7c1de5a8547) 
	T1(hash160("5"))
	var_T1
	
	T3
	T4("5")

	A
	A_bis(inTx) 
 
