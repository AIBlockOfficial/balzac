/*
 * Escrow: Alice's view
 */

// Alice's public key
const kApub = pubkey:03ff41f23b70b1c83b01914eb223d7a97a6c2b24e9a9ef2762bf25ed1c1b83c9c3

// Alice's private key
const kA = key:cSthBXr8YQAexpKeh22LB9PdextVE1UJeahmyns5LzcmMDSy59L4

// Bob's public key
const kBpub = pubkey:03a5aded4cfa04cb4b49d4b19fe8fac0b58802983018cdd895a28b643e7510c1fb

//
// 1) Alice's funds
//

// tx with Alice's funds, redeemable with Alice's private key
transaction A_funds {
    input = _
    output = 1 BTC: fun(x). versig(kApub; x)
}

//
// 2) Alice spends the funds
//

transaction T {
    input = A_funds: sig(kA)
    output = 1 BTC: fun(x, y). versig(kApub, kBpub; x, y)
}

//
// 3.1) Alice creates a signature to send to Bob
//

transaction T1(sigA:signature, sigB:signature, pubK:pubkey)  {
    input = T: sigA sigB
    output = 1 BTC: fun(x). versig(pubK; x)
}

// signature of T1 that send the money to Bob		
const sigA_to_Bob = sig(kA) of T1(_,_,kBpub)

//
// 3.2) Alice receives Bob's signature and spends T
//

const sigB = sig:30450221008dc5731220ff24f4c31af290db94cffee3ef401b19b2e0ab83ea61cc8e19da0f02205be817550ef1bf2109159ea7667e3bc7f52a2e29e0c92f2c2749552f64e1d59701
const sigA = sig(kA) of T1(_,_,kApub)

eval T1(sigA, sigB, kApub)
